// schema.prisma

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  price       Float
}

model User {
  id                   String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt            DateTime      @default(now())
  updatedAt            DateTime     @updatedAt
  name                 String
  email                String        @unique
  password             String
  isActive             Boolean       @default(true)
  isVerified           Boolean       @default(false)
  passwordChangedAt    DateTime?
  passwordResetExpires DateTime?
  passwordResetToken   Int?
  verifyKey            Int?
  verifyKeyExpires     DateTime?
  phoneNumber          String?       @unique
  role                 Roles         @default(user)
  authProvider         AuthProviders @default(credentials)
  status               Status        @default(active)
  jobs                 Job[]

  // Define the relation with SavedJob model
  savedJobs SavedJob[]
}



// Define the Job model
model Job {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt        DateTime        @default(now())
  updatedAt        DateTime @updatedAt
  title            String
  salary           Int
  location         String?
  employmentType   String?
  workingSchedule  String?
  experience       String?
  companyName      String?
  companyLogo      String?
  description String?
  users            User[]

  // Define the relation with SavedJob model
  savedByUsers     SavedJob[]
}

// Define the SavedJob model
model SavedJob {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  job       Job      @relation(fields: [jobId], references: [id])

  // Foreign keys
  userId    String   @db.Uuid
  jobId     String   @db.Uuid
}

// enum EmploymentType {
//   FULL_TIME
//   PART_TIME
//   CONTRACT
//   INTERNSHIP
//   PROJECT_WORK
//   VOLUNTEERING
// }

// enum WorkingSchedule {
//   FULL_DAY
//   FLEXIBLE_SCHEDULE
//   SHIFT_WORK
//   DISTANT_WORK
//   SHIFT_METHOD
// }

enum AuthProviders {
  google
  credentials
  apple
  facebook
}

enum Roles {
  user
  admin
}

enum Status {
  active
  blocked
}
